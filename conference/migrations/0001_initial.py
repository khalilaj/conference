# Generated by Django 2.0.5 on 2018-10-22 05:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('updated_on', models.DateTimeField(auto_now_add=True, verbose_name='date modified')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='  Up to 10 digits allowed.', regex='^\\+?1?\\d{10,15}$')])),
                ('user_type', models.CharField(choices=[('SP', 'Speaker'), ('AT', 'Attendants'), ('AD', 'Admin')], max_length=10)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'account',
                'verbose_name_plural': 'accounts',
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('updated_on', models.DateTimeField(auto_now_add=True, verbose_name='date modified')),
                ('name', models.CharField(max_length=30)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('about', models.TextField(blank=True)),
                ('logo', models.FileField(blank=True, upload_to='', verbose_name='conference-logo')),
            ],
            options={
                'verbose_name': 'conference',
                'verbose_name_plural': 'conference',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('updated_on', models.DateTimeField(auto_now_add=True, verbose_name='date modified')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=30)),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField()),
                ('conference_id', models.ForeignKey(on_delete=None, to='conference.Conference')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='EventAttendant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('updated_on', models.DateTimeField(auto_now_add=True, verbose_name='date modified')),
                ('event_attendant_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='conference.Event')),
            ],
            options={
                'verbose_name': 'event_attendant',
                'verbose_name_plural': 'event_attendant',
            },
        ),
        migrations.CreateModel(
            name='EventFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('updated_on', models.DateTimeField(auto_now_add=True, verbose_name='date modified')),
                ('event_feedback', models.TextField()),
                ('attendant_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='conference.Event')),
            ],
            options={
                'verbose_name': 'event_feedback',
                'verbose_name_plural': 'event_feedback',
            },
        ),
        migrations.CreateModel(
            name='EventSpeaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('updated_on', models.DateTimeField(auto_now_add=True, verbose_name='date modified')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='conference.Event')),
                ('event_speaker_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'event_speaker',
                'verbose_name_plural': 'event_speaker',
            },
        ),
        migrations.AlterUniqueTogether(
            name='conference',
            unique_together={('name',)},
        ),
    ]
